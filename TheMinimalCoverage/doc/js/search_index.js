var search_data = {"index":{"searchIndex":["configuration","inputreader","mcsolver","segment","testcase","testtestcase","add_segment()","add_segment()","find_mc()","get_segment()","is_covered?()","is_in_mc?()","new()","new()","new()","print_mc()","read_input()","segment_count()","test_equal()","test_general()","test_is_in_mc?()","to_s()","to_s()","to_s2()","license","readme","rakefile","input1","input2","rake-d"],"longSearchIndex":["configuration","inputreader","mcsolver","segment","testcase","testtestcase","configuration#add_segment()","testcase#add_segment()","mcsolver::find_mc()","testcase#get_segment()","configuration#is_covered?()","testcase#is_in_mc?()","configuration::new()","segment::new()","testcase::new()","testcase#print_mc()","inputreader::read_input()","testcase#segment_count()","testtestcase#test_equal()","testtestcase#test_general()","testtestcase#test_is_in_mc?()","segment#to_s()","testcase#to_s()","segment#to_s2()","","","","","",""],"info":[["Configuration","","Configuration.html","","<p>Predstavuje konfiguraci na zasobniku\n"],["InputReader","","InputReader.html","","<p>Trida starajici se o nacteni vstupu\n"],["MCSolver","","MCSolver.html","","<p>Trida resi problem minimalniho pokryti brutalni silou\n"],["Segment","","Segment.html","","<p>Trida predstavujici segment (usecku)\n"],["TestCase","","TestCase.html","","<p>Trida predstavujici test case\n"],["TestTestCase","","TestTestCase.html","","<p>Test tridy TestCase\n<p>Test tridy Configuration\n<p>Test tridy MCSolver\n"],["add_segment","Configuration","Configuration.html#method-i-add_segment","(position, segment)","<p>Prida usecku do minimalniho pokryti\n"],["add_segment","TestCase","TestCase.html#method-i-add_segment","(segment)","<p>Prida k test casu segment\n"],["find_mc","MCSolver","MCSolver.html#method-c-find_mc","(test_case)","<p>Nalezne minimalni pokryti\n"],["get_segment","TestCase","TestCase.html#method-i-get_segment","(position)","<p>Vrati segment z dane pozice v poli segmentu\n"],["is_covered?","Configuration","Configuration.html#method-i-is_covered-3F","()","<p>Vrati true, pokud je usek pokryt cely\n"],["is_in_mc?","TestCase","TestCase.html#method-i-is_in_mc-3F","(position)","<p>Vrati true, pokud je segment na dane pozici soucasti minimalniho pokryti\n"],["new","Configuration","Configuration.html#method-c-new","(h, min_count, min_solution, line)","<p>Konstruktor konfigurace\n"],["new","Segment","Segment.html#method-c-new","(l, r)","<p>Konstruktor usecky\n"],["new","TestCase","TestCase.html#method-c-new","(id, m)","<p>Konstruktor test case\n"],["print_mc","TestCase","TestCase.html#method-i-print_mc","()","<p>Vytiskne vysledek algoritmu minimalniho pokryti\n"],["read_input","InputReader","InputReader.html#method-c-read_input","()","<p>Nacte test cases\n"],["segment_count","TestCase","TestCase.html#method-i-segment_count","()","<p>Vrati pocet segmentu v test casu\n"],["test_equal","TestTestCase","TestTestCase.html#method-i-test_equal","()",""],["test_general","TestTestCase","TestTestCase.html#method-i-test_general","()",""],["test_is_in_mc?","TestTestCase","TestTestCase.html#method-i-test_is_in_mc-3F","()",""],["to_s","Segment","Segment.html#method-i-to_s","()",""],["to_s","TestCase","TestCase.html#method-i-to_s","()",""],["to_s2","Segment","Segment.html#method-i-to_s2","()",""],["LICENSE","","LICENSE.html","","<p>TheMinimalCoverage\n<p>Put appropriate LICENSE for your project here.\n"],["README","","README.html","","<p>TheMinimalCoverage\n<p>You should document your project here.\n"],["Rakefile","","Rakefile.html","","<p>#  # To change this template, choose Tools | Templates # and open the\ntemplate in the editor.\n<p>require …\n"],["input1","","input1_txt.html","","<p>2\n<p>1 -1 0 -5 -3 2 5 0 0\n<p>1 -1 0 0 1 0 0\n"],["input2","","input2_txt.html","","<p>7\n<p>1 -1 0 -5 -3 2 5 0 0\n<p>1 -1 0 0 1 0 0\n"],["rake-d","","nbproject/private/rake-d_txt.html","","<p>clean=Remove any temporary products. clobber=Remove any generated file.\nclobber_package=Remove package …\n"]]}}